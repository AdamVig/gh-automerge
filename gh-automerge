#!/usr/bin/env bash

set -euo pipefail

# Set a pull request to auto-merge (squash)
# $@: parameters for `gh pr merge`

subject="$(gh pr view --json=title,number --template="{{ .title }} (#{{ .number }})")"
base_ref="$(gh pr view --json baseRefName --jq '.baseRefName')"
revision_range="origin/${base_ref}..HEAD"
is_draft="$(gh pr view --json=isDraft --jq='.isDraft')"

if [ "$is_draft" = "true" ]; then
	read -r -p "Pull request is a draft. Press enter to mark as ready for review. "
	gh pr ready
fi

branch_commits_as_markdown_list() {
    # 1. Format commits as Markdown list items:
    # - <subject>
    #   <body indented by two spaces>
    #
    # 2. Replace `# ` with `- `, preserving any indentation, to change comments into list items
    # 3. Replace tabs with four spaces so that indentation works correctly in Markdown
    git log \
        "$revision_range" \
        --pretty='format:- %s%w(0,2,2)%+b' \
        -- |
        sed -E -e 's/#(\s+)/\1- /g' -e 's/\t/    /g'
}

if (( $(git rev-list --count "$revision_range" ) == 1 )); then
	body_source='HEAD'
else
	all_commits="$(branch_commits_as_markdown_list)"
	body_source="$(
	(
		echo 'all';
		git log --pretty='format:%H' "$base_ref"..HEAD
	) | fzf \
					--prompt='Select commit(s) to use for merge commit body' \
					--preview \
					"[ {} = 'all' ] && \
					echo '${all_commits}' || \
					git show --no-patch --pretty='format:%b' {}"
)"
fi

if [ "$body_source" = 'all' ]; then
  body="$all_commits"
else
  body="$(git show --no-patch --pretty="%b" "$body_source" )"
fi

read -r -p "${subject}

${body}

â†’ Press enter to proceed with this commit message "

branch_before="$(git symbolic-ref --short HEAD)"
gh pr merge \
   --squash \
   --subject="$subject" \
   --body="$body" \
   --delete-branch \
   --auto \
   "${@:2}"

if [ "$(git symbolic-ref --short HEAD)" != "$branch_before" ]; then
	echo 'Pull request merged'
	exit
fi

template='Merge commit message:{{ "\n" }}{{ .autoMergeRequest.commitHeadline }}{{ "\n" }}{{ .autoMergeRequest.commitBody }}'
gh pr view \
  --json=autoMergeRequest \
  --template="$template"

thread_resolution_required="$(gh api \
"/repos/{owner}/{repo}/rules/branches/${base_ref}" \
--jq='map(select(.type == "pull_request") | .parameters.required_review_thread_resolution) | any'
)"

warning_message='**Auto-merge enabled**: approving this pull request will merge it.'
if [ "$thread_resolution_required" = 'true' ]; then
	warning_message+=' To approve conditionally, <span title="Because &ldquo;Require conversation resolution before merging&rdquo; is enabled.">make at least one comment in your review</span>.'
fi
body="$(gh pr view --json body --jq '.body')"
if [[ "$body" != *$warning_message* ]]; then
    updated_body="> [!IMPORTANT]
> $warning_message

$body"
    echo "$updated_body" | gh pr edit --body-file='-'
fi
